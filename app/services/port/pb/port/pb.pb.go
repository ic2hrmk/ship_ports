// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/port/pb.proto

/*
Package port is a generated protocol buffer package.

It is generated from these files:
	pb/port/pb.proto

It has these top-level messages:
	FindAllPortsRequest
	FindAllPortsResponse
	SavePortRequest
	SavePortResponse
	SavePortsBulkRequest
	SavePortsBulkResponse
	PortEntity
*/
package port

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/lyft/protoc-gen-validate/validate"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PortDomainServiceErrorCode int32

const (
	PortDomainServiceErrorCode_Unknown        PortDomainServiceErrorCode = 0
	PortDomainServiceErrorCode_Internal       PortDomainServiceErrorCode = 5000
	PortDomainServiceErrorCode_InvalidRequest PortDomainServiceErrorCode = 4000
)

var PortDomainServiceErrorCode_name = map[int32]string{
	0:    "Unknown",
	5000: "Internal",
	4000: "InvalidRequest",
}
var PortDomainServiceErrorCode_value = map[string]int32{
	"Unknown":        0,
	"Internal":       5000,
	"InvalidRequest": 4000,
}

func (x PortDomainServiceErrorCode) String() string {
	return proto.EnumName(PortDomainServiceErrorCode_name, int32(x))
}
func (PortDomainServiceErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FindAllPortsRequest struct {
	Limit  uint64 `protobuf:"varint,1,opt,name=Limit" json:"Limit,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=Offset" json:"Offset,omitempty"`
}

func (m *FindAllPortsRequest) Reset()                    { *m = FindAllPortsRequest{} }
func (m *FindAllPortsRequest) String() string            { return proto.CompactTextString(m) }
func (*FindAllPortsRequest) ProtoMessage()               {}
func (*FindAllPortsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FindAllPortsRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindAllPortsRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type FindAllPortsResponse struct {
	Items []*PortEntity `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *FindAllPortsResponse) Reset()                    { *m = FindAllPortsResponse{} }
func (m *FindAllPortsResponse) String() string            { return proto.CompactTextString(m) }
func (*FindAllPortsResponse) ProtoMessage()               {}
func (*FindAllPortsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FindAllPortsResponse) GetItems() []*PortEntity {
	if m != nil {
		return m.Items
	}
	return nil
}

type SavePortRequest struct {
	Port *PortEntity `protobuf:"bytes,1,opt,name=Port" json:"Port,omitempty"`
}

func (m *SavePortRequest) Reset()                    { *m = SavePortRequest{} }
func (m *SavePortRequest) String() string            { return proto.CompactTextString(m) }
func (*SavePortRequest) ProtoMessage()               {}
func (*SavePortRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SavePortRequest) GetPort() *PortEntity {
	if m != nil {
		return m.Port
	}
	return nil
}

type SavePortResponse struct {
}

func (m *SavePortResponse) Reset()                    { *m = SavePortResponse{} }
func (m *SavePortResponse) String() string            { return proto.CompactTextString(m) }
func (*SavePortResponse) ProtoMessage()               {}
func (*SavePortResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type SavePortsBulkRequest struct {
	Items []*PortEntity `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *SavePortsBulkRequest) Reset()                    { *m = SavePortsBulkRequest{} }
func (m *SavePortsBulkRequest) String() string            { return proto.CompactTextString(m) }
func (*SavePortsBulkRequest) ProtoMessage()               {}
func (*SavePortsBulkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SavePortsBulkRequest) GetItems() []*PortEntity {
	if m != nil {
		return m.Items
	}
	return nil
}

type SavePortsBulkResponse struct {
}

func (m *SavePortsBulkResponse) Reset()                    { *m = SavePortsBulkResponse{} }
func (m *SavePortsBulkResponse) String() string            { return proto.CompactTextString(m) }
func (*SavePortsBulkResponse) ProtoMessage()               {}
func (*SavePortsBulkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type PortEntity struct {
	PortID      string    `protobuf:"bytes,1,opt,name=PortID" json:"PortID,omitempty"`
	Name        string    `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Code        string    `protobuf:"bytes,3,opt,name=Code" json:"Code,omitempty"`
	Alias       []string  `protobuf:"bytes,4,rep,name=Alias" json:"Alias,omitempty"`
	Unlocs      []string  `protobuf:"bytes,5,rep,name=Unlocs" json:"Unlocs,omitempty"`
	Country     string    `protobuf:"bytes,6,opt,name=Country" json:"Country,omitempty"`
	Regions     []string  `protobuf:"bytes,7,rep,name=Regions" json:"Regions,omitempty"`
	Province    string    `protobuf:"bytes,8,opt,name=Province" json:"Province,omitempty"`
	City        string    `protobuf:"bytes,9,opt,name=City" json:"City,omitempty"`
	Coordinates []float32 `protobuf:"fixed32,10,rep,packed,name=Coordinates" json:"Coordinates,omitempty"`
	Timezone    string    `protobuf:"bytes,11,opt,name=Timezone" json:"Timezone,omitempty"`
}

func (m *PortEntity) Reset()                    { *m = PortEntity{} }
func (m *PortEntity) String() string            { return proto.CompactTextString(m) }
func (*PortEntity) ProtoMessage()               {}
func (*PortEntity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PortEntity) GetPortID() string {
	if m != nil {
		return m.PortID
	}
	return ""
}

func (m *PortEntity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PortEntity) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *PortEntity) GetAlias() []string {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *PortEntity) GetUnlocs() []string {
	if m != nil {
		return m.Unlocs
	}
	return nil
}

func (m *PortEntity) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PortEntity) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *PortEntity) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *PortEntity) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *PortEntity) GetCoordinates() []float32 {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *PortEntity) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func init() {
	proto.RegisterType((*FindAllPortsRequest)(nil), "port.FindAllPortsRequest")
	proto.RegisterType((*FindAllPortsResponse)(nil), "port.FindAllPortsResponse")
	proto.RegisterType((*SavePortRequest)(nil), "port.SavePortRequest")
	proto.RegisterType((*SavePortResponse)(nil), "port.SavePortResponse")
	proto.RegisterType((*SavePortsBulkRequest)(nil), "port.SavePortsBulkRequest")
	proto.RegisterType((*SavePortsBulkResponse)(nil), "port.SavePortsBulkResponse")
	proto.RegisterType((*PortEntity)(nil), "port.PortEntity")
	proto.RegisterEnum("port.PortDomainServiceErrorCode", PortDomainServiceErrorCode_name, PortDomainServiceErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PortDomainService service

type PortDomainServiceClient interface {
	FindAllPorts(ctx context.Context, in *FindAllPortsRequest, opts ...grpc.CallOption) (*FindAllPortsResponse, error)
	SavePort(ctx context.Context, in *SavePortRequest, opts ...grpc.CallOption) (*SavePortResponse, error)
	SavePortsBulk(ctx context.Context, in *SavePortsBulkRequest, opts ...grpc.CallOption) (*SavePortsBulkResponse, error)
}

type portDomainServiceClient struct {
	cc *grpc.ClientConn
}

func NewPortDomainServiceClient(cc *grpc.ClientConn) PortDomainServiceClient {
	return &portDomainServiceClient{cc}
}

func (c *portDomainServiceClient) FindAllPorts(ctx context.Context, in *FindAllPortsRequest, opts ...grpc.CallOption) (*FindAllPortsResponse, error) {
	out := new(FindAllPortsResponse)
	err := grpc.Invoke(ctx, "/port.PortDomainService/FindAllPorts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portDomainServiceClient) SavePort(ctx context.Context, in *SavePortRequest, opts ...grpc.CallOption) (*SavePortResponse, error) {
	out := new(SavePortResponse)
	err := grpc.Invoke(ctx, "/port.PortDomainService/SavePort", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portDomainServiceClient) SavePortsBulk(ctx context.Context, in *SavePortsBulkRequest, opts ...grpc.CallOption) (*SavePortsBulkResponse, error) {
	out := new(SavePortsBulkResponse)
	err := grpc.Invoke(ctx, "/port.PortDomainService/SavePortsBulk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PortDomainService service

type PortDomainServiceServer interface {
	FindAllPorts(context.Context, *FindAllPortsRequest) (*FindAllPortsResponse, error)
	SavePort(context.Context, *SavePortRequest) (*SavePortResponse, error)
	SavePortsBulk(context.Context, *SavePortsBulkRequest) (*SavePortsBulkResponse, error)
}

func RegisterPortDomainServiceServer(s *grpc.Server, srv PortDomainServiceServer) {
	s.RegisterService(&_PortDomainService_serviceDesc, srv)
}

func _PortDomainService_FindAllPorts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllPortsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServiceServer).FindAllPorts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortDomainService/FindAllPorts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServiceServer).FindAllPorts(ctx, req.(*FindAllPortsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortDomainService_SavePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServiceServer).SavePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortDomainService/SavePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServiceServer).SavePort(ctx, req.(*SavePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortDomainService_SavePortsBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePortsBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServiceServer).SavePortsBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortDomainService/SavePortsBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServiceServer).SavePortsBulk(ctx, req.(*SavePortsBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortDomainService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "port.PortDomainService",
	HandlerType: (*PortDomainServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindAllPorts",
			Handler:    _PortDomainService_FindAllPorts_Handler,
		},
		{
			MethodName: "SavePort",
			Handler:    _PortDomainService_SavePort_Handler,
		},
		{
			MethodName: "SavePortsBulk",
			Handler:    _PortDomainService_SavePortsBulk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/port/pb.proto",
}

func init() { proto.RegisterFile("pb/port/pb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xad, 0x13, 0xc7, 0x49, 0x6e, 0x28, 0x98, 0xdb, 0xd7, 0x60, 0x84, 0x28, 0x41, 0x82, 0x8a,
	0x45, 0x82, 0xca, 0x12, 0x09, 0xa9, 0x71, 0x0b, 0x0a, 0xe2, 0x51, 0xb9, 0x74, 0xc3, 0xce, 0x49,
	0xa6, 0x68, 0x54, 0x7b, 0xc6, 0xcc, 0x4c, 0x82, 0xca, 0x17, 0x20, 0xbe, 0x82, 0xef, 0x60, 0xc5,
	0x92, 0x1f, 0x61, 0xc1, 0x5f, 0xe0, 0x19, 0xdb, 0x6d, 0x92, 0x66, 0xc1, 0xce, 0xe7, 0x9e, 0x7b,
	0x8f, 0xcf, 0xcc, 0x3d, 0x03, 0x7e, 0x36, 0xea, 0x67, 0x42, 0xea, 0x7e, 0x36, 0xea, 0x65, 0x52,
	0x68, 0x81, 0xae, 0x81, 0xc1, 0xce, 0x2c, 0x4e, 0xd8, 0x24, 0xd6, 0xb4, 0x5f, 0x7d, 0x14, 0x74,
	0x37, 0x84, 0x8d, 0x97, 0x8c, 0x4f, 0x0e, 0x92, 0xe4, 0x38, 0xef, 0x53, 0x11, 0xfd, 0x3c, 0xa5,
	0x4a, 0xe3, 0x26, 0x34, 0xde, 0xb0, 0x94, 0x69, 0xe2, 0xec, 0x3a, 0x7b, 0x6e, 0x54, 0x00, 0xdc,
	0x06, 0xef, 0xfd, 0xd9, 0x99, 0xa2, 0x9a, 0xd4, 0x6c, 0xb9, 0x44, 0xdd, 0x17, 0xb0, 0xb9, 0x28,
	0xa2, 0x32, 0xc1, 0x15, 0xc5, 0x47, 0xd0, 0x18, 0x6a, 0x9a, 0xaa, 0x5c, 0xa5, 0xbe, 0xd7, 0xd9,
	0xf7, 0x7b, 0xc6, 0x4b, 0xcf, 0xf4, 0x1c, 0x71, 0xcd, 0xf4, 0x45, 0x54, 0xd0, 0xb9, 0x89, 0x5b,
	0x27, 0xf1, 0x8c, 0x1a, 0xa2, 0x32, 0xf0, 0x14, 0x5c, 0x03, 0xed, 0xff, 0x57, 0x4c, 0x0e, 0xe0,
	0xe7, 0xdf, 0x5f, 0xf5, 0xc6, 0x77, 0xa7, 0xe6, 0x3b, 0x91, 0xed, 0xec, 0x22, 0xf8, 0x57, 0x22,
	0x85, 0x01, 0x63, 0xac, 0xaa, 0xa9, 0xc1, 0x34, 0x39, 0xaf, 0xd4, 0xff, 0xd7, 0xd8, 0x0e, 0x6c,
	0x2d, 0xcd, 0x97, 0xc2, 0xbf, 0x6b, 0x00, 0x57, 0xed, 0xf8, 0x00, 0x3c, 0x83, 0x86, 0x87, 0xd6,
	0x6f, 0x7b, 0xd0, 0x36, 0xee, 0x5c, 0x69, 0xcc, 0x95, 0x04, 0xde, 0x03, 0xf7, 0x5d, 0x9c, 0x52,
	0x7b, 0x73, 0x0b, 0x0d, 0xb6, 0x8c, 0x08, 0x6e, 0x28, 0x26, 0x94, 0xd4, 0x0d, 0x1d, 0xd9, 0x6f,
	0xb3, 0x84, 0x83, 0x84, 0xc5, 0x8a, 0xb8, 0xb9, 0xcb, 0x76, 0x54, 0x00, 0xb3, 0x84, 0x53, 0x9e,
	0x88, 0xb1, 0x22, 0x0d, 0x5b, 0x2e, 0x11, 0x3e, 0x84, 0x66, 0x28, 0xa6, 0x5c, 0xcb, 0x0b, 0xe2,
	0x2d, 0xff, 0xa3, 0x62, 0x90, 0x40, 0x33, 0xa2, 0x9f, 0x58, 0x7e, 0x06, 0xd2, 0xb4, 0xd3, 0x15,
	0xc4, 0x00, 0x5a, 0xc7, 0x52, 0xcc, 0x18, 0x1f, 0x53, 0xd2, 0xb2, 0x26, 0x2e, 0xb1, 0xf1, 0x1e,
	0xe6, 0xc7, 0x24, 0xed, 0x6b, 0xde, 0x4d, 0x19, 0x77, 0xa1, 0x13, 0x0a, 0x21, 0x27, 0x8c, 0xe7,
	0xb9, 0x52, 0x04, 0x72, 0xe1, 0x5a, 0x34, 0x5f, 0x32, 0xe2, 0x1f, 0x58, 0x4a, 0xbf, 0x0a, 0x4e,
	0x49, 0xa7, 0x10, 0xaf, 0xf0, 0x93, 0xb7, 0x10, 0x98, 0x2b, 0x3a, 0x14, 0x69, 0xcc, 0xf8, 0x09,
	0x95, 0x33, 0x36, 0xa6, 0x47, 0x52, 0x0a, 0x69, 0xef, 0xa0, 0x03, 0xcd, 0x53, 0x7e, 0xce, 0xc5,
	0x17, 0xee, 0xaf, 0xe1, 0x3a, 0xb4, 0x86, 0x5c, 0x53, 0xc9, 0xe3, 0xc4, 0xff, 0xf6, 0x18, 0x37,
	0xe0, 0xe6, 0x90, 0xdb, 0x3c, 0x97, 0x7b, 0xf5, 0x7f, 0xdc, 0xdf, 0xff, 0xe3, 0xc0, 0xed, 0x6b,
	0x7a, 0xf8, 0x0a, 0x6e, 0xcc, 0x27, 0x14, 0xef, 0x14, 0x1b, 0x5f, 0x11, 0xfd, 0x20, 0x58, 0x45,
	0x95, 0x6b, 0x5f, 0xc3, 0xe7, 0xd0, 0xaa, 0x12, 0x81, 0x5b, 0x45, 0xe7, 0x52, 0x74, 0x83, 0xed,
	0xe5, 0xf2, 0xe5, 0xf0, 0x6b, 0x58, 0x5f, 0x88, 0x13, 0x06, 0x8b, 0xad, 0xf3, 0x19, 0x0d, 0xee,
	0xae, 0xe4, 0x2a, 0xad, 0x81, 0xf7, 0xd1, 0xbe, 0xec, 0x91, 0x67, 0xdf, 0xf1, 0xb3, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xbe, 0x6a, 0xcb, 0x30, 0xfa, 0x03, 0x00, 0x00,
}
